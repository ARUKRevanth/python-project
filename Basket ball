def max_basketball_score(A, K):
    N = len(A)
    
    # Step 1: Calculate scores based on position and distance
    scores = [(i + 1) * A[i] for i in range(N)]
    
    # Step 2: Calculate the maximum sum for any contiguous subarray of size K
    current_sum = sum(scores[:K])
    max_sum = current_sum
    
    # Sliding window to find max sum of size K
    for i in range(K, N):
        current_sum += scores[i] - scores[i - K]
        max_sum = max(max_sum, current_sum)
    
    return max_sum

# Example usage
A = [3, 1, 4, 1, 5]  # Distances
K = 3                  # Size of the subarray
result = max_basketball_score(A, K)
print(result)  # Output the maximum score
